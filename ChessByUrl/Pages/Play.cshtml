@page "/play/{ruleset?}/{state?}/{moves?}"
@using System.Text.Json
@using ChessByUrl.Rules
@model PlayModel


<table class="board showMoveFrom">
    @if (Model.Board != null && Model.LegalMoves != null)
    {
        for (int rank = Model.Board.Ranks.Count - 1; rank >= 0; rank--)
        {
            <tr>
                @for (int file = 0; file < Model.Board.Ranks[rank].Count; file++)
                {
                    var coords = new Coords(rank, file);
                    var piece = Model.Board.Ranks[rank][file];
                    var legalMoves = Model.LegalMoves[rank][file];

                    var squareClass = "square";
                    squareClass += (rank + file) % 2 == 0 ? " light" : " dark";
                    squareClass += (legalMoves == null) ? "" : " moveFrom";

                    <td class="@squareClass" onclick="onSquareClick(this)" data-coords=@JsonSerializer.Serialize(coords) data-legalmoves="@JsonSerializer.Serialize(legalMoves)">
                        @if (piece != null)
                        {
                            <span>@piece.Unicode</span>
                        }
                    </td>
                }
            </tr>
        }
    }
</table>

@if (Model.Board != null)
{
    <div>
        <p>@Model.Board.CurrentPlayer.Name to move</p>
        <p>@Model.GetCastlingRightsString(0)</p>
        <p>@Model.GetCastlingRightsString(1)</p>
        <p>@Model.GetEnPassantString()</p>
    </div>
}